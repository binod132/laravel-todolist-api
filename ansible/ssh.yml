---
- name: SSH Connection via sshpass to remote Ubuntu VM
  hosts: localhost
  gather_facts: no
  vars:
    ssh_password: "ubuntu"
    ssh_user: "ubuntu"
    remote_host: "192.168.130.108"
  tasks:
    - name: Wait for apt lock to be released (if any)
      ansible.builtin.shell:
        cmd: "sshpass -p '{{ ssh_password }}' ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ssh_user }}@{{ remote_host }} 'while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do echo \"Waiting for apt to finish...\"; sleep 5; done'"
      register: wait_lock_output
      ignore_errors: yes

    - name: Update and install Docker on remote VM in a single SSH command
      ansible.builtin.command:
        cmd: |
          sshpass -p '{{ ssh_password }}' ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ssh_user }}@{{ remote_host }} << EOF
          echo '{{ ssh_password }}' | sudo -S apt-get update -y &&
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common &&
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
          echo "deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
          sudo apt-get update -y &&
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
          sudo systemctl start docker &&
          sudo systemctl enable docker
          EOF
      register: docker_install_output

    - name: Print Docker installation result
      debug:
        var: docker_install_output.stdout
